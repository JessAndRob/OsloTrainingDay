# when an issue is opened add the title and link to sql database

name: Issue creation to create Infra

on:
  issues:
    types: 
      - opened

# default to pwsh
defaults:
  run:
    shell: pwsh

jobs:
  insert:
  # only run if issue is created by jess
    #if: contains(github.event.issue.labels.*.name, 'infra')   # labels aren't getting applied properly from the issue_template for tfvars
    runs-on: ubuntu-latest

    steps:
    
    # call api to insert data
    - name: Insert tf vars
      id: insert_tf_vars
      run: |
        echo '${{ github.event.issue.body }}'

        $issueBody = '${{ github.event.issue.body }}'

        # parse the issue
        $regexResult = [regex]::Matches($issueBody, '(?ms)resource_group_name\n\n(?<resource_group_name>.*)\n\n### sql_instance_name\n\n(?<sql_instance_name>.*)\n\n### location\n\n(?<location>.*)\n\n### tags\n\n(?<tags>.*)\n\n### administrator_login\n\n(?<administrator_login>.*)\n\n### environment\n\n(?<environment>.*)\n\n### minimum_tls_version\n\n(?<minimum_tls_version>.*)\n\n### public_network_access\n\n(?<public_network_access>.*)\n\n### active_directory_admin_user\n\n(?<active_directory_admin_user>.*)\n\n### active_directory_admin_sid\n\n(?<active_directory_admin_sid>.*)\n\n### tenantid\n\n(?<tenantid>.*)\n\n### sql_database_names\n\n(?<sql_database_names>.*)\n')

        # create the json
        $body = @{
          resource_group_name         =  $regexResult[0].Groups['resource_group_name'].Value
          sql_instance_name           =  $regexResult[0].Groups['sql_instance_name'].Value
          location                    =  $regexResult[0].Groups['location'].Value
          tags                        =  $regexResult[0].Groups['tags'].Value
          administrator_login         =  $regexResult[0].Groups['administrator_login'].Value
          environment                 =  $regexResult[0].Groups['environment'].Value
          minimum_tls_version         =  $regexResult[0].Groups['minimum_tls_version'].Value
          public_network_access       =  $regexResult[0].Groups['public_network_access'].Value
          active_directory_admin_user =  $regexResult[0].Groups['active_directory_admin_user'].Value
          active_directory_admin_sid  =  $regexResult[0].Groups['active_directory_admin_sid'].Value
          tenantid                    =  $regexResult[0].Groups['tenantid'].Value
          sql_database_names          =  $regexResult[0].Groups['sql_database_names'].Value
        }
        $bodyJson = $body | ConvertTo-Json
        $response = Invoke-RestMethod -Uri 'https://dsoslo2023.azurewebsites.net/api/InsertSqlTfVars' -Method Post -Body $bodyJson -ContentType 'application/json'
        echo $response

    - name: pull-request
      uses: repo-sync/pull-request@v2
      with:
        destination_branch: "main"
        pr_title: "We got some infra to create for issue number #${{ github.event.issue.number }}"
        pr_body: ":crown: *An automated PR*

        For issue number #${{ github.event.issue.number }} raised by  @${{ github.event.issue.user.login }}
        
        "              # Full markdown support, requires pr_title to be set
        pr_reviewer: "SQLDBAWithABeard,jpomfret"                         # Comma-separated list (no spaces)
        pr_assignee: "SQLDBAWithABeard,jpomfret"                         # Comma-separated list (no spaces)
        pr_label: "create-infra"                               # Comma-separated list (no spaces)                    # Milestone name

        github_token: ${{ secrets.GITHUB_TOKEN }}